{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musht\\\\OneDrive\\\\Desktop\\\\React Formic\\\\my-project\\\\src\\\\Form\\\\Radio.jsx\";\nimport React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Radio = props => {\n  const {\n    label,\n    name,\n    options,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"font-bold flex  \",\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      className: \"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\",\n      as: \"select\",\n      id: name,\n      name: name,\n      ...rest,\n      children: _ref => {\n        let {\n          field\n        } = _ref;\n        return options.map(option => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: option.value,\n              ...field,\n              value: option.value,\n              checked: field.value === option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option.value,\n              children: option.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)]\n          }, option.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Radio;\nexport default Radio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","Field","ErrorMessage","Radio","props","label","name","options","rest","field","map","option","value","key"],"sources":["C:/Users/musht/OneDrive/Desktop/React Formic/my-project/src/Form/Radio.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\n\r\nconst Radio = (props) => {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div>\r\n      <label className=\"font-bold flex  \" htmlFor={name}>\r\n        {label}\r\n      </label>\r\n      <Field\r\n        className=\"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\"\r\n        as=\"select\"\r\n        id={name}\r\n        name={name}\r\n        {...rest}\r\n      >\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type=\"radio\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                />\r\n                <label htmlFor={option.value}>{option.value}</label>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage name={name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,QAApC;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EACvB,MAAM;IAAEC,KAAF;IAASC,IAAT;IAAeC,OAAf;IAAwB,GAAGC;EAA3B,IAAoCJ,KAA1C;EACA,oBACE;IAAA,wBACE;MAAO,SAAS,EAAC,kBAAjB;MAAoC,OAAO,EAAEE,IAA7C;MAAA,UACGD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,KAAD;MACE,SAAS,EAAC,gHADZ;MAEE,EAAE,EAAC,QAFL;MAGE,EAAE,EAAEC,IAHN;MAIE,IAAI,EAAEA,IAJR;MAAA,GAKME,IALN;MAAA,UAOG,QAAe;QAAA,IAAd;UAAEC;QAAF,CAAc;QACd,OAAOF,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAY;UAC7B,oBACE,QAAC,KAAD,CAAO,QAAP;YAAA,wBACE;cACE,IAAI,EAAC,OADP;cAEE,EAAE,EAAEA,MAAM,CAACC,KAFb;cAAA,GAGMH,KAHN;cAIE,KAAK,EAAEE,MAAM,CAACC,KAJhB;cAKE,OAAO,EAAEH,KAAK,CAACG,KAAN,KAAgBD,MAAM,CAACC;YALlC;cAAA;cAAA;cAAA;YAAA,QADF,eAQE;cAAO,OAAO,EAAED,MAAM,CAACC,KAAvB;cAAA,UAA+BD,MAAM,CAACC;YAAtC;cAAA;cAAA;cAAA;YAAA,QARF;UAAA,GAAqBD,MAAM,CAACE,GAA5B;YAAA;YAAA;YAAA;UAAA,QADF;QAYD,CAbM,CAAP;MAcD;IAtBH;MAAA;MAAA;MAAA;IAAA,QAJF,eA4BE,QAAC,YAAD;MAAc,IAAI,EAAEP;IAApB;MAAA;MAAA;MAAA;IAAA,QA5BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CAlCD;;KAAMH,K;AAoCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}