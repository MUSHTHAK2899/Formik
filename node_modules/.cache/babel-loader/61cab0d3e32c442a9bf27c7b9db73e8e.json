{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musht\\\\OneDrive\\\\Desktop\\\\React Formic\\\\my-project\\\\src\\\\Components\\\\YoutubeForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  channel: \"\"\n};\n\nconst onSubmit = values => {\n  console.log(values);\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst validate = values => {\n  let errors = {};\n\n  if (!values.name) {\n    errors.name = \"Required\";\n  }\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (values.email) {\n    errors.email(\"Invalid email format\");\n  }\n\n  if (!values.channel) {\n    errors.channel = \"Required\";\n  }\n\n  return errors;\n};\n\nconst YoutubeForm = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit,\n    validate\n  }); // console.log('form value' ,formik.values)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"flex flex-col w-[500px] h-[600px] ml-10 mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" block w-[400px] py-3 text-[14px] leading-5 text-gray-500 bg-white border rounded-md  \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-bold flex  \",\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          className: \"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\",\n          type: \"text\",\n          id: \"name\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: formik.errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block w-[400px] p-3 text-[14px] leading-5 text-gray-500 bg-white border rounded-md  \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-bold flex \",\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: formik.handleChange,\n          value: formik.values.email,\n          className: \"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\",\n          type: \"email\",\n          id: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 34\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"font-bold flex \",\n          htmlFor: \"channel\",\n          children: \"Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: formik.handleChange,\n          value: formik.values.channel,\n          className: \"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7 \",\n          type: \"text\",\n          id: \"channel\",\n          name: \"channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), formik.errors.channel ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: formik.errors.channel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mr-[100px] \",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(YoutubeForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = YoutubeForm;\nexport default YoutubeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeForm\");","map":{"version":3,"names":["React","useFormik","initialValues","name","email","channel","onSubmit","values","console","log","alert","JSON","stringify","validate","errors","YoutubeForm","formik","handleSubmit","handleChange"],"sources":["C:/Users/musht/OneDrive/Desktop/React Formic/my-project/src/Components/YoutubeForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  channel: \"\",\r\n};\r\nconst onSubmit = (values) => {\r\n  console.log(values);\r\n  alert(JSON.stringify(values, null, 2));\r\n};\r\nconst validate = (values) => {\r\n  let errors = {};\r\n  if (!values.name) {\r\n    errors.name = \"Required\";\r\n  }\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (values.email) {\r\n    errors.email(\"Invalid email format\");\r\n  }\r\n  if (!values.channel) {\r\n    errors.channel = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst YoutubeForm = () => {\r\n  const formik = useFormik({\r\n    initialValues,\r\n    onSubmit,\r\n    validate,\r\n  });\r\n  // console.log('form value' ,formik.values)\r\n  return (\r\n    <div className=\"\">\r\n      <form\r\n        onSubmit={formik.handleSubmit}\r\n        className=\"flex flex-col w-[500px] h-[600px] ml-10 mt-5\"\r\n      >\r\n        <div className=\" block w-[400px] py-3 text-[14px] leading-5 text-gray-500 bg-white border rounded-md  \">\r\n          <label className=\"font-bold flex  \" htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n            className=\"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\"\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n          />\r\n          {formik.errors.name ? <div  className=\"text-red-500\">{formik.errors.name}</div> : null}\r\n        </div>\r\n\r\n        <div className=\"block w-[400px] p-3 text-[14px] leading-5 text-gray-500 bg-white border rounded-md  \">\r\n          <label className=\"font-bold flex \" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n            className=\"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n          />\r\n          {formik.errors.email ? <div className=\"text-red-500\">{formik.errors.email}</div> : null}\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"font-bold flex \" htmlFor=\"channel\">\r\n            Channel\r\n          </label>\r\n          <input\r\n            onChange={formik.handleChange}\r\n            value={formik.values.channel}\r\n            className=\"block w-[400px] p-2 text-[14px] leading-6 text-[#555] bg-slate-100 bg-none border border-solid rounded-md mb-7 \"\r\n            type=\"text\"\r\n            id=\"channel\"\r\n            name=\"channel\"\r\n          />\r\n          {formik.errors.channel ? <div className=\"text-red-500\">{formik.errors.channel}</div> : null}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"mr-[100px] \">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YoutubeForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}